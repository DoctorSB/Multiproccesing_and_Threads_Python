# Семафора - это объект, который управляет доступом к общему ресурсу.
# наприме если у нас есть 10 потоков, и мы хотим чтобы только 5 из них работали с ресурсом, то мы можем использовать семафору
# для того чтобы ограничить доступ к ресурсу 5 потоками и остальные 5 потоков будут ждать пока семафора не освободится
# когда один из 5 потоков закончит работу с ресурсом, то семафора освободится и один из 5 потоков начнет работать с ресурсом

from threading import Thread, BoundedSemaphore, current_thread
import time
import random

max_connections = 5
# создаем семафору с максимальным количеством подключений
pool = BoundedSemaphore(value=max_connections)  # по умолчанию value=1

# функция, которая будет подключаться к ресурсу
# в данном случае к ресурсу можно подключиться только 5 потокам
# остальные 5 потоков будут ждать пока семафора не освободится
# как только один из 5 потоков закончит работу с ресурсом, то семафора освободится и один из 5 потоков начнет работать с ресурсом


def connect():
    with pool:
        slp = random.randint(1, 5)
        print(f"{current_thread().name} connected to resource. Sleep {slp} seconds")
        time.sleep(slp)


# создаем 10 потоков, которые будут подключаться к ресурсу
# в данном случае к ресурсу можно подключиться только 5 потокам
# остальные 5 потоков будут ждать пока семафора не освободится
for i in range(10):
    t = Thread(target=connect, name=f"Thread-{i}")
    t.start()
